[[language]]
name = "java"
scope = "source.java"
auto-format = true
injection-regex = "java"
roots = ["pom.xml"]
comment-token = "//"

[[language]]
name = "cpp"
scope = "source.cpp"
auto-format = true
comment-token = "//"
indent = { tab-width = 2, unit = ' ' }

[[language]]
name = "c"
scope = "source.c"
auto-format = true
comment-token = "//"
indent = { tab-width = 2, unit = ' ' }
  
[language-server.rust-analyzer.config.check]
command = "clippy"

[language-server.rust-analyzer.config]
inlayHints.bindingModeHints.enable = false
inlayHints.closingBraceHints.minLines = 10
inlayHints.closureReturnTypeHints.enable = "with_block"
inlayHints.discriminantHints.enable = "fieldless"
inlayHints.lifetimeElisionHints.enable = "skip_trivial"
inlayHints.typeHints.hideClosureInitialization = false

[[language]]
name = "toml"
formatter = { command = "taplo", args = ["fmt", "-"]}

[[language]]
name = "typescript"
language-servers = ["typescript-language-server", "tailwindcss-ls", "eslint", "emmet-ls"]
formatter = { command = "npx", args = ["prettier", "--parser", "typescript"] }
indent = { tab-width = 2, unit = " " }
auto-format = true

[[language]]
name = "javascript"
language-servers = ["typescript-language-server", "tailwindcss-ls", "eslint", "emmet-ls"]
formatter = { command = "npx", args = ["prettier", "--parser", "typescript"] }
indent = { tab-width = 2, unit = " " }
auto-format = true

[[language]]
name = "tsx"
language-servers = ["typescript-language-server", "tailwindcss-ls", "eslint", "emmet-ls"]
formatter = { command = "npx", args = ["prettier", "--parser", "typescript"] }
indent = { tab-width = 2, unit = " " }
auto-format = true

[[language]]
name = "jsx"
language-servers = ["typescript-language-server", "tailwindcss-ls", "eslint", "emmet-ls"]
formatter = { command = "npx", args = ["prettier", "--parser", "typescript"] }
indent = { tab-width = 2, unit = " " }
auto-format = true

[[language]]
name = "json"
language-servers = ["vscode-json-language-server"]
formatter = { command = "npx", args = ["prettier", "--parser", "json"] }
indent = { tab-width = 2, unit = " " }
auto-format = true

[language-server.vscode-json-language-server.config]
json = { validate = { enable = true }, format = { enable = true } }
provideFormatter = true

[language-server.vscode-css-language-server.config]
css = { validate = { enable = true } }
scss = { validate = { enable = true } }
less = { validate = { enable = true } }
provideFormatter = true

[[language]]
name = "html"
formatter = { command = "npx", args = ["prettier", "--parser", "html"] }
language-servers = ["vscode-html-language-server", "tailwindcss-ls", "emmet-ls"]

[[language]]
name = "css"
formatter = { command = "npx", args = ["prettier", "--parser", "css"] }
language-servers = ["vscode-css-language-server", "tailwindcss-ls", "emmet-ls"]

[language-server.emmet-ls]
args = ["--stdio"]
command = "emmet-language-server"

[language-server.eslint]
args = ["--stdio"]
command = "vscode-eslint-language-server"

[language-server.eslint.config]
format = true
nodePath = ""
onIgnoredFiles = "off"
packageManager = "npm"
quiet = false
rulesCustomizations = []
run = "onType"
useESLintClass = false
validate = "on"
codeAction = { disableRuleComment = { enable = true, location = "separateLine" }, showDocumentation = { enable = true } }
codeActionOnSave = { mode = "all" }
experimental = { }
problems = { shortenToSingleLine = false }
workingDirectory = { mode = "auto" }

[language-server.tailwindcss-ls]
command = "tailwindcss-language-server"
args = ["--stdio"]
config = {}

[language-server.typescript-language-server.config]
documentFormatting = false
hostInfo = "helix"

[language-server.typescript-language-server.config.typescript.inlayHints]
includeInlayEnumMemberValueHints = true
includeInlayFunctionLikeReturnTypeHints = true
includeInlayFunctionParameterTypeHints = true
includeInlayParameterNameHints = "all"
includeInlayParameterNameHintsWhenArgumentMatchesName = true
includeInlayPropertyDeclarationTypeHints = true
includeInlayVariableTypeHints = true

[language-server.typescript-language-server.config.completions]
completeFunctionCalls = true

[language-server.typescript-language-server.config.javascript.inlayHints]
includeInlayEnumMemberValueHints = true
includeInlayFunctionLikeReturnTypeHints = true
includeInlayFunctionParameterTypeHints = true
includeInlayParameterNameHints = "all"
includeInlayParameterNameHintsWhenArgumentMatchesName = true
includeInlayPropertyDeclarationTypeHints = true
includeInlayVariableTypeHints = true

